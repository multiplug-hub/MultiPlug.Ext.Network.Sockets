@model MultiPlug.Base.Http.EdgeApp

@functions
{
    string isEnabled(bool theValue)
    {
        return (theValue) ? "checked" : "";
    }
}

@{
    string[][] WriteSugestions = new string[][]
    {
        new string[]{ "\\u0020", "Space" },
        new string[]{ "\\u0000", "NUL (Null)" },
        new string[]{ "\\u0001", "SOH (Start of Heading)" },
        new string[]{ "\\u0002", "STX (Start of Text)" },
        new string[]{ "\\u0003", "ETX (End of Text)" },
        new string[]{ "\\u0004", "EOT (End of Transmission)" },
        new string[]{ "\\u0005", "ENQ (Enquiry)" },
        new string[]{ "\\u0006", "ACK (Acknowledge)" },
        new string[]{ "\\u000A", "LF (Line Feed)" },
        new string[]{ "\\u000D", "CR (Carriage Return)" }
    };

}

<form action="" method="post" accept-charset="utf-8" enctype="application/x-www-form-urlencoded" autocomplete="off">
    <section class="row-fluid">

        <div class="row-fluid">
            <div class="box">
                <div class="span3">
                    <a style="line-height: 52px;" href="#"><img alt="Network Logo" src="@Raw(Model.Context.Paths.Assets)images/networks.png"></a>
                </div>
                <div class="span6">
                    <p style="font-size:26px; line-height: 54px; text-align: center; margin: 0px;">Socket Client</p>
                </div>
                <div class="span3" style="text-align: right;">
                    <button type="submit" value="submit" style="height:54px; width:65px" class="item btn btn-green"><i class="icon-save icon-large"></i><p>Save</p></button>
                </div>
            </div>
        </div>

        <input type="hidden" name="guid" value="@Model.Extension.Model.Guid">

        @Include("MultiPlug.Ext.Network.Sockets.NetworkSocketsClientNavigation")

        <div class="row-fluid">
            <div class="box">
                <div class="box no-border non-collapsible">
                    <div class="row-fluid">
                        <div class="row-fluid">
                            <div class="span4">
                                <div class="row-fluid"><div class="span12">IP Address or Host Name</div></div>
                                <div class="row-fluid">
                                    <div class="span12">
                                        <input name="HostName" class="input-block-level" type="text" placeholder="Event ID" value="@Model.Extension.Model.HostName">
                                    </div>
                                </div>
                            </div>

                            <div class="span2">
                                <div class="span12">
                                    <div class="row-fluid"><div class="span12">Port</div></div>
                                    <div class="row-fluid"><div class="span12"><input name="Port" class="input-block-level" type="number" min="1" max="65535" step="1" value="@Model.Extension.Model.Port"></div></div>
                                </div>
                            </div>

                            <div class="span2">
                            </div>

                            <div class="span4">
                                <div class="row-fluid"><div class="span12">Write Subscriptions Control Connection Status</div></div>
                                <div class="row-fluid"><div class="span12"><input type="checkbox" name="SubscriptionsControlConnect" value="true" @Raw(isEnabled(Model.Extension.Model.SubscriptionsControlConnect))></div></div>
                            </div>
                        </div>
                    </div>

                    <h4>Read Event</h4>
                    <div class="row-fluid">
                        <div class="well">
                            <div class="row-fluid">
                                <div class="span4">
                                    <div class="row-fluid"><div class="span12">ID</div></div>
                                    <div class="row-fluid">
                                        <div class="span12">
                                            <input name="ReadEventId" class="input-block-level" type="text" placeholder="Event ID" value="@Model.Extension.Model.ReadEventId">
                                        </div>
                                    </div>
                                </div>

                                <div class="span4">
                                    <div class="span12">
                                        <div class="row-fluid"><div class="span12">Description</div></div>
                                        <div class="row-fluid">
                                            <div class="span12">
                                                <input name="ReadEventDescription" class="input-block-level" type="text" placeholder="Description" value="@Model.Extension.Model.ReadEventDescription" />
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="span4">
                                    <div class="row-fluid"><div class="span12">Subject</div></div>
                                    <div class="row-fluid">
                                        <div class="span12">
                                            <input name="ReadEventSubject" class="span12" type="text" value="@Model.Extension.Model.ReadEventSubject">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <h4>Write Subscriptions</h4>
                    <div class="row-fluid">
                        <div class="well">
                            <div class="row-fluid">

                                <table id="SubscriptionsTable" class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th class="span3">Subscription</th>
                                            <th class="span1">Ignore Data</th>
                                            <th class="span2">Prefix</th>
                                            <th class="span2">Separator</th>
                                            <th class="span2">Suffix</th>
                                            <th class="span1">Is Hex</th>
                                            <th class="span1"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.Extension.Model.WriteSubscriptionGuids.Length; i++)
                                        {
                                            <tr>
                                                <td class="span3">
                                                    <input name="WriteSubscriptionGuids" type="hidden" value="@Model.Extension.Model.WriteSubscriptionGuids[i]">
                                                    <input name="WriteSubscriptionIds" class="input-block-level mp-event-picker" type="text" value="@Model.Extension.Model.WriteSubscriptionIds[i]">
                                                </td>
                                                <td class="span1">
                                                    <input type="hidden" name="WriteSubscriptionIgnoreDatas" value="false">
                                                    <input type="checkbox" name="WriteSubscriptionIgnoreDatas" value="true" @Raw(isEnabled(Model.Extension.Model.WriteSubscriptionIgnoreDatas[i]))>
                                                </td>
                                                <td class="span2">
                                                    <div class="input-prepend">
                                                        <div class="btn-group">
                                                            <button class="btn dropdown-toggle" data-toggle="dropdown" tabindex="-1">
                                                                <span class="caret">
                                                                </span>
                                                            </button>
                                                            <ul class="dropdown-menu">
                                                                @for (int j = 0; j < WriteSugestions.Length; j++)
                                                                {
                                                                    <li>
                                                                        <a class="WriteSuggestion" data-suggestiontext="@WriteSugestions[j][0]" href="#">@WriteSugestions[j][1]</a>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        </div>
                                                        <input name="WriteSubscriptionWritePrefixs" class="span9" type="text" value="@Model.Extension.Model.WriteSubscriptionWritePrefixs[i]">
                                                    </div>
                                                </td>
                                                <td class="span2">
                                                    <div class="input-prepend">
                                                        <div class="btn-group">
                                                            <button class="btn dropdown-toggle" data-toggle="dropdown" tabindex="-1">
                                                                <span class="caret">
                                                                </span>
                                                            </button>
                                                            <ul class="dropdown-menu">
                                                                @for (int j = 0; j < WriteSugestions.Length; j++)
                                                                {
                                                                    <li>
                                                                        <a class="WriteSuggestion" data-suggestiontext="@WriteSugestions[j][0]" href="#">@WriteSugestions[j][1]</a>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        </div>
                                                        <input name="WriteSubscriptionWriteSeparators" class="span9" type="text" value="@Model.Extension.Model.WriteSubscriptionWriteSeparators[i]">
                                                    </div>
                                                </td>
                                                <td class="span2">
                                                    <div class="input-prepend">
                                                        <div class="btn-group">
                                                            <button class="btn dropdown-toggle" data-toggle="dropdown" tabindex="-1">
                                                                <span class="caret">
                                                                </span>
                                                            </button>
                                                            <ul class="dropdown-menu">
                                                                @for (int j = 0; j < WriteSugestions.Length; j++)
                                                                {
                                                                    <li>
                                                                        <a class="WriteSuggestion" data-suggestiontext="@WriteSugestions[j][0]" href="#">@WriteSugestions[j][1]</a>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        </div>
                                                        <input name="WriteSubscriptionWriteSuffixs" class="span9" type="text" value="@Model.Extension.Model.WriteSubscriptionWriteSuffixs[i]">
                                                    </div>
                                                </td>
                                                <td class="span1">
                                                    <input type="hidden" name="WriteSubscriptionIsHexs" value="false">
                                                    <input type="checkbox" name="WriteSubscriptionIsHexs" value="true" @Raw(isEnabled(Model.Extension.Model.WriteSubscriptionIsHexs[i]))>
                                                </td>
                                                <td class="span1">
                                                    <a class="btn btn-red btn-deletesubscription" href="@Raw(Model.Context.Paths.Current)deletesubscription/?id=@Model.Extension.Model.Guid&subid=@Model.Extension.Model.WriteSubscriptionGuids[i]"><i class="icon-trash"></i></a>
                                                </td>
                                            </tr>
                                        }

                                        <tr>
                                            <th class="span3"></th>
                                            <th class="span1"></th>
                                            <th class="span2"></th>
                                            <th class="span2"></th>
                                            <th class="span2"></th>
                                            <th class="span1"></th>
                                            <td class="span1">
                                                <button type="button" id="btn-subscription" class="btn btn-green"><i class="icon-plus"></i></button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>
<script>
    var writeSuggestionList = [];
    var html1 = '<li><a class="WriteSuggestion" data-suggestiontext="';
    var html2 = '" href="#">'
    var html3 = '</a></li>';

    @for (int j = 0; j < WriteSugestions.Length; j++)
    {
@:writeSuggestionList.push(html1);
<text>writeSuggestionList.push('\</text>@WriteSugestions[j][0]<text>');</text>
@:writeSuggestionList.push(html2);
<text>writeSuggestionList.push('</text>@WriteSugestions[j][1]<text>');</text>
@:writeSuggestionList.push(html3);
    }

    writeSuggestionList = writeSuggestionList.join('');

    $("input:radio").change(function () {
        if ($("#ReadTo").is(":checked")) {
            $("#ReadToValue").removeAttr("disabled");
            $("#btn-readtosuggestion").removeAttr("disabled");
        }
        else {
            $("#ReadToValue").attr("disabled", "");
            $("#btn-readtosuggestion").attr("disabled", "");
        }
    });

    function NewSubscription() {
        return '<tr>\
            <td class="span3">\
                <input name="WriteSubscriptionGuids" type="hidden" value="">\
                <input name="WriteSubscriptionIds" class="input-block-level mp-event-picker" type="text" value="">\
            </td>\
            <td class="span1">\
                <input type="hidden" name="WriteSubscriptionIgnoreDatas" value="false">\
                <input type="checkbox" name="WriteSubscriptionIgnoreDatas" value="true">\
            </td>\
            <td class="span2">\
                <div class="input-prepend">\
                    <div class="btn-group">\
                        <button class="btn dropdown-toggle" data-toggle="dropdown" tabindex="-1">\
                            <span class="caret">\
                            </span>\
                        </button>\
                        <ul class="dropdown-menu">'
        + writeSuggestionList +
                        '</ul>\
                    </div>\
                    <input name="WriteSubscriptionWritePrefixs" class="span9" type="text" value="">\
                </div>\
            </td>\
            <td class="span2">\
                <div class="input-prepend">\
                    <div class="btn-group">\
                        <button class="btn dropdown-toggle" data-toggle="dropdown" tabindex="-1">\
                            <span class="caret">\
                            </span>\
                        </button>\
                        <ul class="dropdown-menu">'
        + writeSuggestionList +
                        '</ul>\
                    </div>\
                    <input name="WriteSubscriptionWriteSeparators" class="span9" type="text" value="">\
                </div>\
            </td>\
            <td class="span2">\
                <div class="input-prepend">\
                    <div class="btn-group">\
                        <button class="btn dropdown-toggle" data-toggle="dropdown" tabindex="-1">\
                            <span class="caret">\
                            </span>\
                        </button>\
                        <ul class="dropdown-menu">'
        + writeSuggestionList +
                        '</ul>\
                    </div>\
                    <input name="WriteSubscriptionWriteSuffixs" class="span9" type="text" value="">\
                </div>\
            </td>\
            <td class="span1">\
                <input type="hidden" name="WriteSubscriptionIsHexs" value="false">\
                <input type="checkbox" name="WriteSubscriptionIsHexs" value="true">\
            </td>\
            <td class="span1">\
                <a class="btn btn-red btn-deletesubscriptiontemp" href="#"><i class="icon-trash"></i></a>\
            </td>\
        </tr>'
    }

    $("#btn-subscription").click(function () {
        $('#SubscriptionsTable tr:last').before(NewSubscription());

        $(".btn-deletesubscriptiontemp").click(function (event) {
            event.preventDefault();
            $(this).closest("tr").remove();
        });

        applyWriteSuggestion();
        applyMPEventPickerOnClick();
    });

    $(".btn-deletesubscription").click(function (event) {
        event.preventDefault();

        var theRow = $(this).closest("tr");

        $.post($(this).attr('href'), function (data) {

        })
        .done(function () {
            theRow.remove();
        });
    });

    $('.ReadToSuggestion').click(function (event) {
        event.preventDefault();
        $("#ReadToValue").val($("#ReadToValue").val() + $(this).attr("data-readto"));
    });

    function applyWriteSuggestion() {
        $('.WriteSuggestion').click(function (event) {
            event.preventDefault();
            var inputtext = $(this).closest(".input-prepend").find("input");
            $(inputtext).val($(inputtext).val() + $(this).attr("data-suggestiontext"));
        });
    }

    applyWriteSuggestion();
</script>
