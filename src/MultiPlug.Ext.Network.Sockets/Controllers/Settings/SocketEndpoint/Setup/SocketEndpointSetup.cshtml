@model MultiPlug.Base.Http.EdgeApp

<form action="" method="post" accept-charset="utf-8" enctype="application/x-www-form-urlencoded">
    <section class="row-fluid">

        <div class="row-fluid">
            <div class="box">
                <div class="span4">
                    <a style="line-height: 52px;" href="#"><img alt="Network Logo" src="@Raw(Model.Context.Paths.Assets)images/networks.png"></a>
                </div>
                <div class="span3">
                    <p style="font-size:26px; line-height: 54px; text-align: center; margin: 0px;">Socket Endpoint</p>
                </div>
                <div class="span5" style="text-align: right;">
                    <a class="btn btn-black" style="height:44px; width:35px" href="@Raw(Model.Context.Paths.Home)"><i class="icon-arrow-left icon-large"></i><p>Back</p></a>
                    <button type="submit" value="submit" style="height:54px; width:65px" class="item btn btn-green"><i class="icon-save icon-large"></i><p>Save</p></button>
                </div>
            </div>
        </div>

        <input type="hidden" name="guid" value="@Model.Extension.Model.Guid">

        @Include("MultiPlug.Ext.Network.Sockets.NetworkSocketsEndpointNavigation")

        <div class="row-fluid">
            <div class="box">
                <div class="box no-border non-collapsible">
                    <div class="row-fluid">
                        <div class="span4">
                            <div class="row-fluid"><div class="span12">IP Address of local NIC</div></div>
                            <div class="row-fluid">
                                <div class="span12">
                                    <select name="NICIndex" class="input-block-level">
                                        @for (var Index = 0; Index < Model.Extension.Model.IPAddressList.Length; Index++)
                                        {
                                            <option value="@Index" @if (Model.Extension.Model.NICIndex == Index) { <text> selected </text>  }>@Model.Extension.Model.IPAddressList[Index]</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="span2">
                            <div class="span12">
                                <div class="row-fluid"><div class="span12">Port</div></div>
                                <div class="row-fluid"><div class="span12"><input name="Port" class="input-block-level" type="text" placeholder="Port" value="@Model.Extension.Model.Port"></div></div>
                            </div>
                        </div>

                        <div class="span2">
                            <div class="span12">
                                <div class="row-fluid"><div class="span12">Backlog</div></div>
                                <div class="row-fluid"><div class="span12"><input name="Backlog" class="input-block-level" type="text" placeholder="Backlog" value="@Model.Extension.Model.Backlog"></div></div>
                            </div>
                        </div>

                        <div class="span4">

                        </div>

                    </div>

                    <div class="row-fluid">
                        <div class="span4">
                            <div class="row-fluid"><div class="span12">Read Event ID</div></div>
                            <div class="row-fluid">
                                <div class="span12">
                                    <input name="ReadEventId" class="input-block-level" type="text" placeholder="Event ID" value="@Model.Extension.Model.ReadEventId">
                                </div>
                            </div>
                        </div>

                        <div class="span4">
                            <div class="span12">
                                <div class="row-fluid"><div class="span12">Read Event Description</div></div>
                                <div class="row-fluid">
                                    <div class="span12">
                                        <input name="ReadEventDescription" class="input-block-level" type="text" placeholder="Description" value="@Model.Extension.Model.ReadEventDescription" />
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="span4">
                            <div class="row-fluid"><div class="span12">Read Event Subject</div></div>
                            <div class="row-fluid">
                                <div class="span12">
                                    <input name="ReadEventSubject" class="span12" type="text" placeholder="Subject" value="@Model.Extension.Model.ReadEventSubject">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row-fluid">

                        <div class="span6">
                            <h3 class="box-header">
                                Write Subscriptions
                            </h3>
                            <div class="box">
                                <div class="row-fluid">
                                </div>
                                <ul id="Subscriptions" style="list-style: none;">
                                    @for ( var Index = 0; Index < Model.Extension.Model.WriteSubscriptionGuid.Length; Index++)
                                    {
                                        <li>
                                            <div class="control-group">
                                                <div class="controls">
                                                    <div class="span2">
                                                        <button value="@Model.Extension.Model.WriteSubscriptionGuid[Index]" type="button" class="item btn btn-red delete-sub"><i class="icon-trash icon-large"></i></button>
                                                    </div>
                                                    <div class="span7">
                                                        <input name="WriteSubscriptionGuid" type="hidden" value="@Model.Extension.Model.WriteSubscriptionGuid[Index]">
                                                        <input name="WriteSubscriptionId" type="text" value="@Model.Extension.Model.WriteSubscriptionId[Index]" class="input-block-level mp-event-picker">
                                                    </div>
                                                    <div class="span2">
                                                        <input name="WriteSubscriptionIndex" type="text" value="@Model.Extension.Model.WriteSubscriptionIndex[Index]" class="input-block-level">
                                                    </div>
                                                    <div class="span1">
                                                        @Raw((@Model.Extension.Model.WriteSubscriptionConnected[Index]) ? "<i class=\"icon-ok icon-large\"></i>" : "<i class=\"icon-remove icon-large\"></i>")
                                                    </div>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                </ul>
                                <ul style="list-style: none;">
                                    <li>
                                        <div class="control-group">
                                            <div class="controls">
                                                <div class="span2">
                                                    <button type="button" id="NewSubscription" class="btn btn-green"><i class="icon-plus icon-large"></i></button>
                                                </div>
                                                <div class="span10">
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                </ul>

                            </div>
                        </div>

                        <div class="span6">
                            @* Right Hand Column*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>

<script>
    function newSubElement() {
        return '<li>\
            <div class="control-group">\
                <div class="controls">\
                    <div class="span2">\
                    </div>\
                    <div class="span7">\
                        <input name="WriteSubscriptionGuid" type="hidden" value="">\
                        <input name="WriteSubscriptionId" type="text" value="" class="input-block-level mp-event-picker">\
                    </div>\
                    <div class="span2">\
                        <input name="WriteSubscriptionIndex" type="text" value="0" class="input-block-level">\
                    </div>\
                    <div class="span1">\
                        <i class=\"icon-remove icon-large\"></i>\
                    </div>\
                </div>\
            </div>\
        </li>';
    }

    function ApplyDelete(theSelector) {
        $(theSelector).on('click', '.delete-sub', function () {
            var id = $(this).attr('value');
            var closestli = $(this).closest("li");

            $.ajax({
                type: "POST",
                url: '@Raw(Model.Context.Paths.Current)deletesubscription/?id=@Model.Extension.Model.Guid&subid=' + id,
                success: function () {
                    closestli.remove();
                }
            });
        });
    }

    $('#NewSubscription').on('click', function () {
        $('#Subscriptions').append(newSubElement());
        var NewAggregateSubscription = $('#Subscriptions li:last-child');
        applyMPEventPickerOnClick();
        ApplyDelete(NewAggregateSubscription.find(':button'));
    });

    ApplyDelete(document);

</script>